
package gr7372.turkin.lab2;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "MathService", targetNamespace = "http://lab2.turkin.gr7372/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MathService {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "arithmeticSequence", targetNamespace = "http://lab2.turkin.gr7372/", className = "gr7372.turkin.lab2.ArithmeticSequence")
    @ResponseWrapper(localName = "arithmeticSequenceResponse", targetNamespace = "http://lab2.turkin.gr7372/", className = "gr7372.turkin.lab2.ArithmeticSequenceResponse")
    public List<Integer> arithmeticSequence(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "geomSequence", targetNamespace = "http://lab2.turkin.gr7372/", className = "gr7372.turkin.lab2.GeomSequence")
    @ResponseWrapper(localName = "geomSequenceResponse", targetNamespace = "http://lab2.turkin.gr7372/", className = "gr7372.turkin.lab2.GeomSequenceResponse")
    public List<Integer> geomSequence(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "factorial", targetNamespace = "http://lab2.turkin.gr7372/", className = "gr7372.turkin.lab2.Factorial")
    @ResponseWrapper(localName = "factorialResponse", targetNamespace = "http://lab2.turkin.gr7372/", className = "gr7372.turkin.lab2.FactorialResponse")
    public long factorial(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isPrimeNumber", targetNamespace = "http://lab2.turkin.gr7372/", className = "gr7372.turkin.lab2.IsPrimeNumber")
    @ResponseWrapper(localName = "isPrimeNumberResponse", targetNamespace = "http://lab2.turkin.gr7372/", className = "gr7372.turkin.lab2.IsPrimeNumberResponse")
    public boolean isPrimeNumber(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fibbonachiSequence", targetNamespace = "http://lab2.turkin.gr7372/", className = "gr7372.turkin.lab2.FibbonachiSequence")
    @ResponseWrapper(localName = "fibbonachiSequenceResponse", targetNamespace = "http://lab2.turkin.gr7372/", className = "gr7372.turkin.lab2.FibbonachiSequenceResponse")
    public List<Integer> fibbonachiSequence(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
